/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */

#include "s3eExt.h"
#include "IwDebug.h"

#include "s3eIOSIAd.h"

/**
 * Definitions for functions types passed to/from s3eExt interface
 */
typedef  s3eResult(*s3eIOSIAdRegister_t)(s3eIOSIAdCallback cbid, s3eCallback fn, void* userData);
typedef  s3eResult(*s3eIOSIAdUnRegister_t)(s3eIOSIAdCallback cbid, s3eCallback fn);
typedef const char*(*s3eIOSIAdGetErrorString_t)();
typedef s3eIOSIAdError(*s3eIOSIAdGetError_t)();
typedef      int32(*s3eIOSIAdGetInt_t)(s3eIOSIAdProperty prop);
typedef  s3eResult(*s3eIOSIAdSetInt_t)(s3eIOSIAdProperty prop, int32 value);
typedef  s3eResult(*s3eIOSIAdStart_t)();
typedef  s3eResult(*s3eIOSIAdStop_t)();
typedef  s3eResult(*s3eIOSIAdCancel_t)();

/**
 * struct that gets filled in by s3eIOSIAdRegister
 */
typedef struct s3eIOSIAdFuncs
{
    s3eIOSIAdRegister_t m_s3eIOSIAdRegister;
    s3eIOSIAdUnRegister_t m_s3eIOSIAdUnRegister;
    s3eIOSIAdGetErrorString_t m_s3eIOSIAdGetErrorString;
    s3eIOSIAdGetError_t m_s3eIOSIAdGetError;
    s3eIOSIAdGetInt_t m_s3eIOSIAdGetInt;
    s3eIOSIAdSetInt_t m_s3eIOSIAdSetInt;
    s3eIOSIAdStart_t m_s3eIOSIAdStart;
    s3eIOSIAdStop_t m_s3eIOSIAdStop;
    s3eIOSIAdCancel_t m_s3eIOSIAdCancel;
} s3eIOSIAdFuncs;

static s3eIOSIAdFuncs g_Ext;
static bool g_GotExt = false;
static bool g_TriedExt = false;
static bool g_TriedNoMsgExt = false;

static bool _extLoad()
{
    if (!g_GotExt && !g_TriedExt)
    {
        s3eResult res = s3eExtGetHash(0xb2e1d429, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        else
            s3eDebugAssertShow(S3E_MESSAGE_CONTINUE_STOP_IGNORE, "error loading extension: s3eIOSIAd");
        g_TriedExt = true;
        g_TriedNoMsgExt = true;
    }

    return g_GotExt;
}

static bool _extLoadNoMsg()
{
    if (!g_GotExt && !g_TriedNoMsgExt)
    {
        s3eResult res = s3eExtGetHash(0xb2e1d429, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        g_TriedNoMsgExt = true;
        if (g_TriedExt)
            g_TriedExt = true;
    }

    return g_GotExt;
}

s3eBool s3eIOSIAdAvailable()
{
    _extLoadNoMsg();
    return g_GotExt ? S3E_TRUE : S3E_FALSE;
}

s3eBool s3eExtIOSIAdAvailable()
{
    return s3eIOSIAdAvailable();
}

s3eResult s3eIOSIAdRegister(s3eIOSIAdCallback cbid, s3eCallback fn, void* userData)
{
    IwTrace(IOSIAD_VERBOSE, ("calling s3eIOSIAd[0] func: s3eIOSIAdRegister"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

    return g_Ext.m_s3eIOSIAdRegister(cbid, fn, userData);
}

s3eResult s3eIOSIAdUnRegister(s3eIOSIAdCallback cbid, s3eCallback fn)
{
    IwTrace(IOSIAD_VERBOSE, ("calling s3eIOSIAd[1] func: s3eIOSIAdUnRegister"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

    return g_Ext.m_s3eIOSIAdUnRegister(cbid, fn);
}

const char* s3eIOSIAdGetErrorString()
{
    IwTrace(IOSIAD_VERBOSE, ("calling s3eIOSIAd[2] func: s3eIOSIAdGetErrorString"));

    if (!_extLoad())
        return NULL;

    return g_Ext.m_s3eIOSIAdGetErrorString();
}

s3eIOSIAdError s3eIOSIAdGetError()
{
    IwTrace(IOSIAD_VERBOSE, ("calling s3eIOSIAd[3] func: s3eIOSIAdGetError"));

    if (!_extLoad())
        return (s3eIOSIAdError)0;

    return g_Ext.m_s3eIOSIAdGetError();
}

int32 s3eIOSIAdGetInt(s3eIOSIAdProperty prop)
{
    IwTrace(IOSIAD_VERBOSE, ("calling s3eIOSIAd[4] func: s3eIOSIAdGetInt"));

    if (!_extLoad())
        return -1;

    return g_Ext.m_s3eIOSIAdGetInt(prop);
}

s3eResult s3eIOSIAdSetInt(s3eIOSIAdProperty prop, int32 value)
{
    IwTrace(IOSIAD_VERBOSE, ("calling s3eIOSIAd[5] func: s3eIOSIAdSetInt"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

    return g_Ext.m_s3eIOSIAdSetInt(prop, value);
}

s3eResult s3eIOSIAdStart()
{
    IwTrace(IOSIAD_VERBOSE, ("calling s3eIOSIAd[6] func: s3eIOSIAdStart"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

    return g_Ext.m_s3eIOSIAdStart();
}

s3eResult s3eIOSIAdStop()
{
    IwTrace(IOSIAD_VERBOSE, ("calling s3eIOSIAd[7] func: s3eIOSIAdStop"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

    return g_Ext.m_s3eIOSIAdStop();
}

s3eResult s3eIOSIAdCancel()
{
    IwTrace(IOSIAD_VERBOSE, ("calling s3eIOSIAd[8] func: s3eIOSIAdCancel"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

    return g_Ext.m_s3eIOSIAdCancel();
}
